<?xml version="1.0" encoding="UTF-8" ?> 
<Module>
  <ModulePrefs
    title="Wei-Hwa's Puzzle Challenges" 
    description="Regular Puzzle Challenges from a Google Engineer"
    author="Wei-Hwa Huang and others"
    author_email="weihwa.feedback+ig20050602@gmail.com"
    author_location="Mountain View, CA, USA"
    author_affiliation="Google, Inc."
    screenshot="http://weihwa.feedback.googlepages.com/screenshot.png"
    thumbnail="http://weihwa.feedback.googlepages.com/thumbnail.png"
    render_inline="optional"
  /> 
  <Content type="html">

<![CDATA[

<style> 
body,td,a,p,.h{font-family:arial,sans-serif;}
</style>

<script type="text/javascript">
<!-- Javascript begins

  function rot13__MODULE_ID__(text) {

    // build a map. (Not very efficient to do this every time, but what the heck.)
    var alphabet = "abcdefghijklmnopqrstuvwxyzabcdefghijklm";
    var map = new Array();
    for (i = 0; i < 26; ++i)
      map[alphabet.charAt(i)] = alphabet.charAt(i+13);

    var result = "";
    for (i = 0; i < text.length; ++i) {
      result += map[text.charAt(i)];
    }
    return result;
  }

  function answer_to_what__MODULE_ID__(text) {
    // should probably be a map, but I'm lazy.
    if (text == "qnhtugreynhtugre") {
      return 0;
    } else if (text == "srpnyqrpny") {
      return 1;
    } else if (text == "sernxoernx") {
      return 2;
    } else if (text == "travnyqravny") {
      return 3;
    } else if (text == "trahfzrahf") {
      return 4;
    } else if (text == "tebffpebff") {
      return 5;
    } else if (text == "yntrejntre") {
      return 6;
    } else if (text == "arhgreferhgref") {
      return 7;
    } else if (text == "cbfgntrubfgntr") {
      return 8;
    } else if (text == "ubfgntrcbfgntr") {
      return 8;
    } else if (text == "gbhpurfqbhpurf") {
      return 9;
    } else if (text == "ivfpbhagqvfpbhag") {
      return 10;
    } else if (text == "lbhatreybhatre") {
      return 11;
    } else {
      return -1;
    }
  }

  var solved__MODULE_ID__ = new Array();
  for (i = 0; i < 13; ++i) {
    solved__MODULE_ID__[i] = 0;
  }

  function checkbox_clicked__MODULE_ID__() {
    _gel("user_input__MODULE_ID__").value = "enter your answer here";
    update_cbs__MODULE_ID__()
  }

  function update_cbs__MODULE_ID__() {
    for (i = 1; i < 13; ++i) {
      if (solved__MODULE_ID__[i] == 0) {
        _gel("" + i + "cb__MODULE_ID__").checked = false;
      } else {
        _gel("" + i + "cb__MODULE_ID__").checked = true;
      }
    }
  }

  function num_solved__MODULE_ID__() {
    var answer = 0;
    for (i = 1; i < 13; ++i) {
      if (solved__MODULE_ID__[i] != 0) {
        answer++;
      }
    }
    return answer;
  }

  function showCongratulationsSection__MODULE_ID__(question_number) {
    update_cbs__MODULE_ID__();
    clearInput__MODULE_ID__();
    _gel("verify_button__MODULE_ID__").value = "Done! Good job!";
  }

  function showSolvedSection__MODULE_ID__(question_number) {
    update_cbs__MODULE_ID__();
    clearInput__MODULE_ID__();
    if (num_solved__MODULE_ID__() == 1) {
      _gel("verify_button__MODULE_ID__").value = num_solved__MODULE_ID__() + " rhyme solved";
    } else {
      _gel("verify_button__MODULE_ID__").value = num_solved__MODULE_ID__() + " rhymes solved";
    }
  }

  function showRepeatedSection__MODULE_ID__(question_number) {
    update_cbs__MODULE_ID__();
    clearInput__MODULE_ID__();
    _gel("verify_button__MODULE_ID__").value = "Already solved";
  }

  function showTryAgainSection__MODULE_ID__() {
    _gel("verify_button__MODULE_ID__").value = "Try again";
  }

  function clearInput__MODULE_ID__() {
    _gel("user_input__MODULE_ID__").value = "";
  }

  function clearPromptMessage__MODULE_ID__() {
    if (_gel("user_input__MODULE_ID__").value == "enter your answer here") {
      clearInput__MODULE_ID__();
    }
  }

  function verify__MODULE_ID__() {
    var input_widget = _gel("user_input__MODULE_ID__");

    // We filter out any input that isn't a letter.
    var expression = input_widget.value.toLowerCase().replace(/[^a-z]/g, "");

    var correct_answer = answer_to_what__MODULE_ID__(rot13__MODULE_ID__(expression));

    if (correct_answer == -1) {
      showTryAgainSection__MODULE_ID__();
    } else {
      ++solved__MODULE_ID__[correct_answer+1];
      if (solved__MODULE_ID__[correct_answer+1] == 1) {
        if (num_solved__MODULE_ID__() == 12) {
          showCongratulationsSection__MODULE_ID__();
        } else {
          showSolvedSection__MODULE_ID__(correct_answer+1);
        }
      } else {
        showRepeatedSection__MODULE_ID__(correct_answer+1);
      }
    }
  }

// Javascript ends -->
</script>


<font size=-1>

<div style="position:relative;width:93px;float:left;margin-right:2px;margin-top:2px;margin-bottom:0px;">
<IMG SRC="http://www.google.com/ig/images/weihwa.jpg"
     WIDTH="90px"
     ALT="Wei-Hwa Huang: Googler &amp; Four-Time World Puzzle Champion"
     TITLE="Wei-Hwa Huang: Googler &amp; Four-Time World Puzzle Champion"
>
</div>

<B>June 2nd, 2006</B>:
If a tree falls in the woods because of a wound, then what little object will not hear the sound?
<font color="white">Answer: a <i>deaf leaf</i>.</font>
</P>

<P>
A <B>Why Me Rhyme</B> is a pair of words that look like they should rhyme (after all, only
their first letter is different), but don't really.  For example, depending on the colorist, <a href="http://en.wikipedia.org/wiki/The_Demon_(comics)">Etrigan</a> could be considered a <i>lemon demon</i>.  See if you can figure out these twelve Why Me Rhymes from their descriptions:
</P>

<form action="javascript:verify__MODULE_ID__()">

<div style="line-height: 8pt">

<input id="1cb__MODULE_ID__" type="checkbox" onclick="checkbox_clicked__MODULE_ID__()"/> What is heard when your little girl is having fun
<BR>
<input id="2cb__MODULE_ID__" type="checkbox" onclick="checkbox_clicked__MODULE_ID__()"/> A disgustingly dirty sticker
<BR>
<input id="3cb__MODULE_ID__" type="checkbox" onclick="checkbox_clicked__MODULE_ID__()"/> A siesta for weirdos
<BR>
<input id="4cb__MODULE_ID__" type="checkbox" onclick="checkbox_clicked__MODULE_ID__()"/>  A friendly rejection
<BR>
<input id="5cb__MODULE_ID__" type="checkbox" onclick="checkbox_clicked__MODULE_ID__()"/>  Lists of all sorts of animals to be eaten
<BR>
<input id="6cb__MODULE_ID__" type="checkbox" onclick="checkbox_clicked__MODULE_ID__()"/>  An unrefined crucifix
<BR>
<input id="7cb__MODULE_ID__" type="checkbox" onclick="checkbox_clicked__MODULE_ID__()"/>  A type of bar bet, maybe?
<BR>
<input id="8cb__MODULE_ID__" type="checkbox" onclick="checkbox_clicked__MODULE_ID__()"/>  Makes a news agency irrelevant
<BR>
<input id="9cb__MODULE_ID__" type="checkbox" onclick="checkbox_clicked__MODULE_ID__()"/>  Stamps that someone refuses to return
<BR>
<input id="10cb__MODULE_ID__" type="checkbox" onclick="checkbox_clicked__MODULE_ID__()"/>  Makes contact with feminine hygiene products
<BR>
<input id="11cb__MODULE_ID__" type="checkbox" onclick="checkbox_clicked__MODULE_ID__()"/>  A price reduction given only to certain noblemen
<BR>
<input id="12cb__MODULE_ID__" type="checkbox" onclick="checkbox_clicked__MODULE_ID__()"/>  Newer style of patio furniture

</div>

</font>


<font size="-2">
  <p>
      Check your answer to any question above by typing it here:<BR>
      <input id="user_input__MODULE_ID__" type="text" onclick="clearPromptMessage__MODULE_ID__()" name="answer"/>
      <input id="verify_button__MODULE_ID__" type="button" value="Check" onclick="verify__MODULE_ID__()"/>
  </p>

</font>

</form>


  ]]> 

  </Content>
</Module>
